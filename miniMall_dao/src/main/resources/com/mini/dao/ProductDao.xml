<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.4//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mini.dao.ProductDao">

    <resultMap id="product" type="Product" autoMapping="true">
        <id property="productId" column="product_id" javaType="Long"/>
        <association property="productCategory" column="product_category_id" javaType="ProductCategory">
            <id property="productCategoryId" column="product_category_id" javaType="Long"/>
            <result property="productCategoryName" column="product_category_name" javaType="String"/>
        </association>
        <association property="shop" column="shop_id" javaType="Shop">
            <id property="shopId" column="shop_id" javaType="Long"/>
            <result property="shopName" column="shop_name" javaType="String"/>
        </association>
        <collection property="productImgList" select="com.mini.dao.ProductImgDao.queryProductImgList"
                    column="product_id"/>
    </resultMap>


    <insert id="insertProduct" parameterType="Product" useGeneratedKeys="true" keyProperty="productId"
            keyColumn="product_id">
        insert into tb_product(product_name, product_desc, img_addr, normal_price, promotion_price, priority,
                               create_time, last_edit_time, enable_status, product_category_id, shop_id, point)
        VALUES (#{productName}, #{productDesc}, #{imgAddr}, #{normalPrice}, #{promotionPrice}, #{priority},
                #{createTime}, #{lastEditTime}, #{enableStatus}, #{productCategory.productCategoryId}, #{shop.shopId},
                #{point})
    </insert>

    <select id="queryProductById" parameterType="Long" resultMap="product">
        select p.*, ts.shop_id, ts.shop_name, tpc.product_category_id, tpc.product_category_name
        from tb_product p
                 left join tb_product_category tpc on tpc.product_category_id = p.product_category_id
                 left join tb_shop ts on p.shop_id = ts.shop_id
        where product_id = #{productId}
    </select>

    <update id="updateProduct" parameterType="Product">
        update tb_product
        <set>
            <if test="productName != null">product_name=#{productName},</if>
            <if test="productDesc != null">product_desc=#{productDesc},</if>
            <if test="imgAddr != null">img_addr=#{imgAddr},</if>
            <if test="normalPrice != null">normal_price=#{normalPrice},</if>
            <if test="promotionPrice != null">promotion_price=#{promotionPrice},</if>
            <if test="priority != null">priority=#{priority},</if>
            <if test="lastEditTime != null">last_edit_time=#{lastEditTime},</if>
            <if test="enableStatus != null">enable_status=#{enableStatus},</if>
            <!--TODO			<if test="point != null">point=#{point},</if>-->
            <if
                    test="productCategory != null
				 and productCategory.productCategoryId != null">
                product_category_id=#{productCategory.productCategoryId}
            </if>
        </set>
        where product_id=#{productId}
        and shop_id = #{shop.shopId}
    </update>

    <delete id="deleteProduct" parameterType="Long">
        delete
        from tb_product
        where product_id = #{productId} and shop_id=#{shop.shopID}
    </delete>

    <update id="updateProductCategoryToNull" parameterType="Long">
        update tb_product
        set product_category_id = null
        where product_category_id = #{productCategoryId};
    </update>

    <select id="queryProductList" parameterType="Product" resultMap="product">
        select p.*, ts.shop_id, ts.shop_name, tpc.product_category_id, tpc.product_category_name
        from tb_product p
        left join tb_product_category tpc on tpc.product_category_id = p.product_category_id
        left join tb_shop ts on p.shop_id = ts.shop_id
        <where>
            <if test="shop != null and shop.shopId > 0">
                and p.shop_id = #{shop.shopId}
            </if>
            <if test="productName != null">
                and product_name like '%${productName}%'
            </if>
            <if test="enableStatus != null">
                and p.enable_status = #{enableStatus}
            </if>
            <if test="productCategory != null and productCategory.productCategoryId > 0">
                and tpc.product_category_id = #{productCategory.productCategoryId}
            </if>
        </where>
        order by priority desc
    </select>
</mapper>