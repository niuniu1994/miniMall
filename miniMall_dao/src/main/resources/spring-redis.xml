<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">
    <!-- Redis连接池的设置 -->

    <context:property-placeholder location="classpath:redis.properties" ignore-unresolvable="true"/>
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--        最多可以有多少个redis实例-->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!--        连接池最大空闲连接-->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!--        最大等待时间，当连接池没有可用连接时，等待连接被返还的最长时间，超出的抛出异常-->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!--        检查获取连接时的有效性 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>
    <!-- 创建Redis连接池，并做相关配置 -->
    <bean id="connectionFactory"
          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="${redis.hostname}"/>
        <property name="port" value="${redis.port}" />
        <!--<property name="password" value="password"/> -->
        <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>


    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory"/>
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
        </property>
        <property name="valueSerializer" ref="genericJackson2JsonRedisSerializer"/>
    </bean>

    <bean id="genericJackson2JsonRedisSerializer"
          class="org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer"/>

</beans>